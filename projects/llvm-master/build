#!/bin/bash
[% c("var/set_default_env") -%]
builddir=/var/tmp/build
distdir=/var/tmp/dist/[% project %]
mkdir -p /var/tmp/dist
tar -C /var/tmp/dist -xf [% c('input_files_by_name/cmake') %]
tar -C /var/tmp/dist -xf [% c('input_files_by_name/binutils') %]
export PATH="/var/tmp/dist/cmake/bin:$PATH"
mkdir -p $builddir
cd $builddir
tar -xf $rootdir/[% project %]-[% c('version') %].tar.gz
tar -xf $rootdir/[% c('input_files_by_name/clang') %]
tar -xf $rootdir/[% c('input_files_by_name/compiler-rt') %]
tar -xf $rootdir/[% c('input_files_by_name/lld') %]
tar -xf $rootdir/[% c('input_files_by_name/libcxx') %]
tar -xf $rootdir/[% c('input_files_by_name/libcxxabi') %]
tar -xf $rootdir/[% c('input_files_by_name/llvm-mingw') %]
mv llvm-master-* llvm-master
mv clang llvm-master/tools
mv compiler-rt llvm-master/projects
mv lld llvm-master/tools
mv libcxx llvm-master/projects
mv libcxxabi llvm-master/projects

cd llvm-master
export LLVM_HOME=$(pwd)
mkdir build
cd build
cmake .. -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=$distdir -DCMAKE_BUILD_TYPE:STRING=Release $LLVM_HOME
make -j[% c("buildconf/num_procs") %]
make install

# Adding the binutils things and the wrappers we need
cd $distdir/bin
# First the wrappers
exception_flags=""
[% IF c("var/windows-i686") %]
  exception_flags="-fsjlj-exceptions"
[% END -%]
compiler_flags="--sysroot \$DIR/../[% c("arch") %]-w64-mingw32 -rtlib=compiler-rt -stdlib=libc++ -fuse-ld=lld $exception_flags -fuse-cxa-atexit -Qunused-arguments"

cat <<EOF >[% c("arch") %]-w64-mingw32-clang
#!/bin/sh
DIR="\$(cd "\$(dirname "\$0")" && pwd)"
\$DIR/clang -target [% c("arch") %]-w64-mingw32 $compiler_flags "\$@"
EOF
chmod +x [% c("arch") %]-w64-mingw32-clang

cat <<EOF >[% c("arch") %]-w64-mingw32-clang++
#!/bin/sh
DIR="\$(cd "\$(dirname "\$0")" && pwd)"
\$DIR/clang -target [% c("arch") %]-w64-mingw32 --driver-mode=g++ $compiler_flags "\$@"
EOF
chmod +x [% c("arch") %]-w64-mingw32-clang++

# Now the binutils tools
cp /var/tmp/dist/binutils/bin/[% c("arch") %]-w64-mingw32-nm .
ln -s llvm-readobj [% c("arch") %]-w64-mingw32-readobj
./clang $builddir/llvm-mingw/wrappers/windres-wrapper.c -O2 -Wl,-s -o [% c("arch") %]-w64-mingw32-windres

# Packaging up everything
cd ../../
[% c('tar', {
        tar_src => [ project ],
        tar_args => '-czf ' _ dest_dir _ '/' _ c('filename'),
    }) %]
