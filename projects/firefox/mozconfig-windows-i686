CROSS_COMPILE=1

HOST_CC="clang"
HOST_CXX="clang++"
CC="i686-w64-mingw32-clang"
CXX="i686-w64-mingw32-clang++"
CXXFLAGS="-fms-extensions"
CPP="i686-w64-mingw32-clang -E"
AR=llvm-ar
RANLIB=llvm-ranlib

clang_path=/var/tmp/dist/mingw-w64-clang

# For Stylo
BINDGEN_CFLAGS="-I$clang_path/i686-w64-mingw32/include/c++/v1 -I$clang_path/i686-w64-mingw32/include"

# Since we use windres from binutils without the rest of tools (like cpp), we
# need to explicitly specify clang as a preprocessor.
WINDRES="i686-w64-mingw32-windres --preprocessor=\"$CPP -xc\" -DRC_INVOKED"

# Bug 1471698 - Work around binutils corrupting mingw clang binaries.
LDFLAGS="-Wl,-S"
STRIP=/bin/true
OBJCOPY=/bin/true

ac_add_options --enable-application=browser
ac_add_options --target=i686-w64-mingw32
ac_add_options --with-toolchain-prefix=i686-w64-mingw32-
ac_add_options --enable-default-toolkit=cairo-windows
mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/obj-mingw
mk_add_options MOZ_APP_DISPLAYNAME="Tor Browser"
mk_add_options MOZILLA_OFFICIAL=1
mk_add_options BUILD_OFFICIAL=1

ac_add_options --disable-debug
ac_add_options --enable-optimize
ac_add_options --enable-strip
ac_add_options --enable-official-branding

ac_add_options --enable-tor-browser-update
ac_add_options --enable-signmar
ac_add_options --enable-verify-mar

# Let's make sure no preference is enabling either Adobe's or Google's CDM.
ac_add_options --disable-eme
ac_add_options --disable-crashreporter
ac_add_options --disable-maintenance-service
ac_add_options --disable-webrtc
ac_add_options --disable-tests
ac_add_options --disable-accessibility # https://sourceforge.net/p/mingw-w64/bugs/648/
ac_add_options --disable-sandbox # Does not compile currently
ac_add_options --disable-jemalloc # Bugzilla 1466192
